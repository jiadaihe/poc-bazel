workspace(name = "poc-bazel")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# Fetch official Python rules for Bazel
http_archive(
    name = "rules_python",
    sha256 = "d71d2c67e0bce986e1c5a7731b4693226867c45bfe0b7c5e0067228a536fc580",
    strip_prefix = "rules_python-0.29.0",
    url = "https://github.com/bazelbuild/rules_python/releases/download/0.29.0/rules_python-0.29.0.tar.gz",
)

load("@rules_python//python:repositories.bzl", "py_repositories")
py_repositories()

# To register a hermetic Python toolchain rather than rely on a system-installed interpreter for runtime execution
load("@rules_python//python:repositories.bzl", "python_register_toolchains")
python_register_toolchains(
    name = "python3_9",
    # Available versions are listed in @rules_python//python:versions.bzl.
    # We recommend using the same version your team is already standardized on.
    python_version = "3.9",
)
load("@python3_9//:defs.bzl", "interpreter")

# Third party libraries
load("@rules_python//python:pip.bzl", "pip_parse") 
# pip_parse is a repository rule and executes pip at WORKSPACE-evaluation time
pip_parse(
   name = "pip_deps",
   python_interpreter_target = interpreter,
   requirements_lock = "//py:requirements_lock.txt",
)

load("@pip_deps//:requirements.bzl", "install_deps")
install_deps()

# The Python toolchain must be registered ALWAYS at the end of the file
# register_toolchains("//:py_3_toolchain")